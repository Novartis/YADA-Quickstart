# This a virtual host httpd.conf file for YADA, showing some of the  
# options that one can use when fielding yada requests with apache. 

# The main advantage here, other than the standard advantages of
# fronting tomcat with apache httpd, is support for yada i/o, mapping 
# directories and headers for file transferswithout having to rely 
# on symlinks inside the webapp

# You'll notice there are also configs for CORS support, which tomcat can 
# support on its own with the CORS filter, and support for path-style 
# parameters, which tomcat supports with the URLRewrite filter.

# Edit the values for your environment and
# drop it into /path/to/httpd/conf.d and restart apache.

# Remember depending on the httpd version, config, etc. the env vars
# may be ignored during startup. You may need to replace them with 
# absolute values. You also might need to build and install mod_jk.

NameVirtualHost *:80
<VirtualHost *:80>
  SetEnv YADA_ENV # SET THIS env value, e.g., local
  SetEnv YADA_HOST # SET THIS hostname
  SetEnv YADA_ADMIN # SET THIS your email address
  SetEnv YADA_USER yada 
  SetEnv APP_BASE /apps/${YADA_USER}
  SetEnv APP_HOME ${APP_BASE}/${YADA_ENV}
  SetEnv WEB_HOME ${APP_HOME}/web
  SetEnv TOMCAT_HOME ${APP_HOME}/tomcat
  SetEnv YADA_HOME ${TOMCAT_HOME}/webapps/ROOT/

  ServerAdmin ${YADA_ADMIN}
  DocumentRoot ${YADA_HOME} 
  ServerName ${YADA_HOST}
  RedirectMatch ^/$ /yada-admin/
  RewriteEngine On
  RewriteOptions Inherit
  RewriteLog ${WEB_HOME}/logs/rewrite.log 
  RewriteLogLevel 3
  JkMount /yada.jsp     worker1  

  # 1. for direct urls of path-style params
  # i.e., /param/value supports inclusion or omission of 'yada' path element, 
  # i.e., host/yada/param/value or host/param/value
	RewriteCond %{QUERY_STRING} ^$
	RewriteCond %{REQUEST_URI} \b(q|qname|j|JSONParams)\b
	RewriteRule ^(.+)?/(yada/)?(.+)$   /yada.jsp?yp=$3 [PT,L]      
	
  # 2. for direct access using standard url parameter syntax
  # i.e., yada?param=val, with or without .jsp extension
	RewriteCond %{REQUEST_URI} ^/(yada)(\.jsp)*$
	RewriteRule ^(.+)?/yada(\.jsp)?(.*)$ /yada.jsp [QSA,PT,L]
  
  # includes CORS config, necessary for using the yada-admin migration tool, 
  # assuming your source and target (i.e., test and prod) are on different hosts
	<Directory "${YADA_HOME}">
	  AllowOverride None
	  Options FollowSymLinks 
	  Order allow,deny
	  Allow from all
	  SetEnvIf Origin "^https?://(.+\.)?(mydomain.com)(:[0-9]+)?$" ORIGIN=$0
	  Header always set Access-Control-Allow-Origin %{ORIGIN}e env=ORIGIN
	  Header set Access-Control-Allow-Methods "GET, PUT, POST, DELETE, OPTIONS"
	</Directory>
	
  # To support yada i/o
	Alias /files "${APP_HOME}/files"
	<Directory "${APP_HOME}/files">
	    AllowOverride None
	    Options Indexes 
	    Order allow,deny
	    Allow from all
	</Directory>
	<Location /files/out>
	    SetEnvIf Request_URI "^.*/([^/]*)$" FILENAME=$1
	    Header set "Content-disposition" "attachment; filename=%{FILENAME}e"
	    UnsetEnv FILENAME
	</Location>
</VirtualHost>

LoadModule    jk_module  modules/mod_jk.so
# Where to find workers.properties
JkWorkersFile /apps/yada/web/conf/workers.properties
# Where to put jk shared memory
JkShmFile     /apps/yada/web/logs/mod_jk.shm
# Where to put jk logs
JkLogFile     /apps/yada/web/logs/mod_jk.log
# Set the jk log level [debug/error/info]
JkLogLevel  info 
# Select the timestamp log format
JkLogStampFormat "[%a %b %d %H:%M:%S %Y] "
# Send JSPs  for context / to worker named worker1
JkMount  /yada.jsp     worker1

